// Generated by view binder compiler. Do not edit!
package com.example.mobilnyciuch.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mobilnyciuch.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.imaginativeworld.whynotimagecarousel.ImageCarousel;

public final class FragmentCollectionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonCollection;

  @NonNull
  public final ImageCarousel carouselFootwear;

  @NonNull
  public final ImageCarousel carouselLower;

  @NonNull
  public final ImageCarousel carouselUpper;

  @NonNull
  public final ImageButton deleteFoot;

  @NonNull
  public final ImageButton deleteLow;

  @NonNull
  public final ImageButton deleteUp;

  @NonNull
  public final LinearLayout linearCollection;

  private FragmentCollectionBinding(@NonNull LinearLayout rootView,
      @NonNull Button buttonCollection, @NonNull ImageCarousel carouselFootwear,
      @NonNull ImageCarousel carouselLower, @NonNull ImageCarousel carouselUpper,
      @NonNull ImageButton deleteFoot, @NonNull ImageButton deleteLow,
      @NonNull ImageButton deleteUp, @NonNull LinearLayout linearCollection) {
    this.rootView = rootView;
    this.buttonCollection = buttonCollection;
    this.carouselFootwear = carouselFootwear;
    this.carouselLower = carouselLower;
    this.carouselUpper = carouselUpper;
    this.deleteFoot = deleteFoot;
    this.deleteLow = deleteLow;
    this.deleteUp = deleteUp;
    this.linearCollection = linearCollection;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCollectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCollectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_collection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCollectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_collection;
      Button buttonCollection = ViewBindings.findChildViewById(rootView, id);
      if (buttonCollection == null) {
        break missingId;
      }

      id = R.id.carousel_footwear;
      ImageCarousel carouselFootwear = ViewBindings.findChildViewById(rootView, id);
      if (carouselFootwear == null) {
        break missingId;
      }

      id = R.id.carousel_lower;
      ImageCarousel carouselLower = ViewBindings.findChildViewById(rootView, id);
      if (carouselLower == null) {
        break missingId;
      }

      id = R.id.carousel_upper;
      ImageCarousel carouselUpper = ViewBindings.findChildViewById(rootView, id);
      if (carouselUpper == null) {
        break missingId;
      }

      id = R.id.delete_foot;
      ImageButton deleteFoot = ViewBindings.findChildViewById(rootView, id);
      if (deleteFoot == null) {
        break missingId;
      }

      id = R.id.delete_low;
      ImageButton deleteLow = ViewBindings.findChildViewById(rootView, id);
      if (deleteLow == null) {
        break missingId;
      }

      id = R.id.delete_up;
      ImageButton deleteUp = ViewBindings.findChildViewById(rootView, id);
      if (deleteUp == null) {
        break missingId;
      }

      LinearLayout linearCollection = (LinearLayout) rootView;

      return new FragmentCollectionBinding((LinearLayout) rootView, buttonCollection,
          carouselFootwear, carouselLower, carouselUpper, deleteFoot, deleteLow, deleteUp,
          linearCollection);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
